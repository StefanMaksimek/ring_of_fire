@import "../../assets/variable.scss";

.player-component {
  position: absolute;
}

.error {
  position: absolute;
  top: 0;
  height: 100vh;
  width: 100%;
  display: none;
  justify-content: center;
  align-items: center;
  background-color: $secondary-tr;
  z-index: 9999;
  h2 {
    text-align: center;
    background-color: $primary;
    color: $white;
    padding: $spacing-S;
    border-radius: $brd-radius;
  }
}

.game-field {
  height: 100vh;
  background: url("../../assets/img/gamedesk.jpg") no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  .icon-box {
    background-color: $white-tr;
    margin: $spacing-L;
    border-radius: $brd-radius;
    box-shadow: 1px 1px 3px 3px rgb(0 0 0 / 20%);
    z-index: 50;
    .game-btn {
      position: relative;
      background-color: $primary;
      margin: $spacing-S;
      z-index: 5;
      span {
        position: absolute;
        display: none;
        background-color: $secondary;
        color: $black;
        top: 100%;
        left: 50%;
        transform: translate(-50%);
        padding: 8px;
        border-radius: $brd-radius;
      }
      &:hover {
        transform: scale(1.05);
        span {
          display: block;
          transition: $transition-ms;
          z-index: 10;
        }
      }
    }
  }
  .card-stack {
    position: absolute;
    width: 100%;
    img {
      position: absolute;
      height: 220px;
      box-shadow: $shadow;
      border-radius: 0.6rem;
    }
    .topCard {
      cursor: pointer;
      transition: $transition-ms;
      &:hover {
        filter: brightness(0.8);
        transform: scale(1.05) translate(5%, 5%);
      }
    }
    .pick-card {
      animation: pick-card-animation 1s linear;
      transform: translate(
          calc(50vw - var(--xOffset) - 38px),
          calc(50vh - var(--yOffset) - 38px)
        )
        rotate(var(--orgDegrees)) scale(1);
    }
  }
  .game-info {
    width: 50%;
    min-width: 300px;
  }

  .firering {
    position: absolute;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    img {
      width: 600px;
      object-fit: cover;
    }
    .fire1 {
      position: absolute;
      animation: rotate 8s linear infinite;
      opacity: 0.5;
    }
    .fire2 {
      position: absolute;
      animation: rotateBack 10s linear infinite;
      opacity: 0.5;
    }
  }
}

@keyframes pick-card-animation {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(25vw, 25vh) rotate(calc(var(--orgDegrees) / 2))
      scale(1.3);
  }

  100% {
    transform: translate(
        calc(50vw - var(--xOffset) - 38px),
        calc(50vh - var(--yOffset) - 38px)
      )
      rotate(var(--orgDegrees)) scale(1);
  }
}
@keyframes rotate {
  0% {
    transform: rotate(0deg) scale(1);
    z-index: 5;
  }
  50% {
    transform: rotate(180deg) scale(1.1);
    z-index: 50;
  }
  100% {
    transform: rotate(360deg) scale(1);
    z-index: 5;
  }
}
@keyframes rotateBack {
  0% {
    transform: rotate(0deg) scale(1);
    z-index: 4;
  }
  50% {
    transform: rotate(-180deg) scale(1.15);
    z-index: 40;
  }
  100% {
    transform: rotate(-360deg) scale(1);
    z-index: 4;
  }
}

@media (max-width: 900px) {
  .game-field {
    align-items: flex-start;
    .icon-box {
      display: flex;
      .game-btn {
        span {
          color: $black;
        }
      }
    }
    .game-info {
      margin: 0;
      width: 100%;
      min-width: none;
    }
    .card-stack {
      top: 30vh;
      img {
        height: 180px;
      }
      .pick-card {
        animation: pick-card-animation 1s linear;
        transform: translate(
            calc(50vw - var(--xOffset) - 16px),
            calc(20vh - var(--yOffset) - 16px)
          )
          rotate(var(--orgDegrees)) scale(1);
      }
    }
  }

  @keyframes pick-card-animation {
    0% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(25vw, 10vh) rotate(calc(var(--orgDegrees) / 2))
        scale(1.3);
    }

    100% {
      transform: translate(
          calc(50vw - var(--xOffset) - 16px),
          calc(20vh - var(--yOffset) - 16px)
        )
        rotate(var(--orgDegrees)) scale(1);
    }
  }
}

@media (max-width: 570px) {
  .card-stack {
    img {
      height: 110px;
    }
  }
}

@media (max-height: 500px) {
  .game-field {
    .game-info {
      margin: 0;
      width: 100%;
      min-width: none;
    }
    .card-stack {
      img {
        height: 110px;
      }
    }
  }
}

@media (max-height: 380px) {
  .error {
    display: flex;
  }
}

@media (max-width: 510px) {
  .error {
    display: flex;
  }
}
